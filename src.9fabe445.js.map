{"version":3,"sources":["core/server.ts","widgets/Form.ts","widgets/Window.ts","widgets/ui.ts","widgets/ActionBar.ts","widgets/Table.ts","core/shared.ts","widgets/TilingWindowManager.ts","widgets/WindowsBar.ts","core/widget.ts","index.ts"],"names":[],"mappings":"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","file":"src.9fabe445.js","sourceRoot":"..\\src","sourcesContent":["import {\r\n    MyTesting,\r\n    Resource,\r\n    RecordCollection,\r\n    tutors,\r\n    learners,\r\n    bookings,\r\n    matchings,\r\n    requests,\r\n    requestSubmissions,\r\n    stringifyError,\r\n    ResourceInfo,\r\n    Record\r\n} from './shared';\r\n\r\nfunction failAfterFiveSeconds<T>(p: Promise<T>): Promise<T> {\r\n    return new Promise((res, rej) => {\r\n        setTimeout(\r\n            () =>\r\n                rej({\r\n                    error: true,\r\n                    message: 'Server is not responding'\r\n                }),\r\n            5000\r\n        );\r\n        p.then(res);\r\n    });\r\n}\r\n\r\nexport function convertServerResponseToAskFinished<T>(\r\n    response: ServerResponse<T>\r\n): AskFinished<T> {\r\n    if (response.error) {\r\n        const v: AskError = {\r\n            status: AskStatus.ERROR,\r\n            message: response.message\r\n        };\r\n        return v;\r\n    } else {\r\n        const v: AskLoaded<T> = {\r\n            status: AskStatus.LOADED,\r\n            val: response.val\r\n        };\r\n        return v;\r\n    }\r\n}\r\nexport function getResultOrFail<T>(askFinished: AskFinished<T>): T {\r\n    if (askFinished.status == AskStatus.ERROR) {\r\n        throw askFinished.message;\r\n    } else {\r\n        return askFinished.val;\r\n    }\r\n}\r\nexport async function askServer(args: any[]): Promise<AskFinished<any>> {\r\n    console.log('[server] args', args);\r\n    const result = await failAfterFiveSeconds(mockServer(args));\r\n    console.log('[server] result', result);\r\n    return convertServerResponseToAskFinished(result);\r\n}\r\n\r\n/*\r\nKEY CONCEPT: how data is kept in sync\r\nSuppose multiple people are using the app at once. When someone sends a change to the server, onClientNotification methods for ALL OTHER clients are called, which basically tell the other clients to \"make XYZ change to your local copy of the data\".\r\n*/\r\nexport async function onClientNotification(args: any[]): Promise<void> {\r\n    console.log('[server notification]', args);\r\n    const getResource: { [name: string]: () => Resource } = {\r\n        tutors: () => tutors,\r\n        learners: () => learners,\r\n        bookings: () => bookings,\r\n        matchings: () => matchings,\r\n        requests: () => requests,\r\n        requestSubmissions: () => requestSubmissions\r\n    };\r\n    if (args[0] === 'update') {\r\n        getResource[args[1]]().state.onServerNotificationUpdate(\r\n            args[2] as Record\r\n        );\r\n    }\r\n    if (args[0] === 'delete') {\r\n        getResource[args[1]]().state.onServerNotificationDelete(\r\n            args[2] as number\r\n        );\r\n    }\r\n    if (args[0] === 'create') {\r\n        getResource[args[1]]().state.onServerNotificationCreate(\r\n            args[2] as Record\r\n        );\r\n    }\r\n}\r\n\r\nexport type ServerResponse<T> = {\r\n    error: boolean;\r\n    val: T;\r\n    message: string;\r\n};\r\n\r\nexport enum AskStatus {\r\n    LOADING = 'LOADING',\r\n    LOADED = 'LOADED',\r\n    ERROR = 'ERROR'\r\n}\r\n\r\nexport type Ask<T> = AskLoading | AskFinished<T>;\r\n\r\nexport type AskLoading = { status: AskStatus.LOADING };\r\nexport type AskFinished<T> = AskLoaded<T> | AskError;\r\n\r\nexport type AskError = {\r\n    status: AskStatus.ERROR;\r\n    message: string;\r\n};\r\n\r\nexport type AskLoaded<T> = {\r\n    status: AskStatus.LOADED;\r\n    val: T;\r\n};\r\n\r\nclass MockResourceServerEndpoint {\r\n    resource: () => Resource;\r\n    contents: RecordCollection;\r\n    nextKey: number = 1000; // default ID is very high for testing purposes\r\n\r\n    constructor(resource: () => Resource, contents: RecordCollection) {\r\n        // IMPORTANT: the resource field is \":() => Resource\" intentionally.\r\n        // The general rule is that exported variables from another module\r\n        // aren't available until runtime.\r\n\r\n        // Making it \":Resource\" directly, results in an error.\r\n\r\n        this.resource = resource;\r\n        this.contents = contents;\r\n    }\r\n\r\n    success(val: any): ServerResponse<any> {\r\n        return {\r\n            error: false,\r\n            message: null,\r\n            val\r\n        };\r\n    }\r\n\r\n    error(message: string): ServerResponse<any> {\r\n        return {\r\n            error: true,\r\n            message,\r\n            val: null\r\n        };\r\n    }\r\n\r\n    processClientAsk(args: any[]): ServerResponse<any> {\r\n        console.log('[mock server] endpoint', this.resource().name, args);\r\n        if (args[0] === 'retrieveAll') {\r\n            return this.success(this.contents);\r\n        }\r\n        if (args[0] === 'update') {\r\n            this.contents[String(args[1].id)] = args[1];\r\n            onClientNotification(['update', this.resource().name, args[1]]);\r\n            return this.success(null);\r\n        }\r\n        if (args[0] === 'create') {\r\n            if (args[1].date === -1) {\r\n                args[1].date = Date.now();\r\n            }\r\n            if (args[1].id === -1) {\r\n                args[1].id = this.nextKey;\r\n                ++this.nextKey;\r\n            }\r\n            this.contents[String(args[1].id)] = args[1];\r\n            onClientNotification(['create', this.resource().name, args[1]]);\r\n            return this.success(this.contents[String(args[1].id)]);\r\n        }\r\n        if (args[0] === 'delete') {\r\n            delete this.contents[String(args[1])];\r\n            onClientNotification(['delete', this.resource().name, args[1]]);\r\n            return this.success(null);\r\n        }\r\n        throw new Error('args not matched');\r\n    }\r\n\r\n    async replyToClientAsk(args: any[]): Promise<ServerResponse<any>> {\r\n        return new Promise((res, rej) => {\r\n            setTimeout(() => {\r\n                try {\r\n                    res(this.processClientAsk(args));\r\n                } catch (v) {\r\n                    rej(v);\r\n                }\r\n            }, 500); // fake a half-second delay\r\n        });\r\n    }\r\n}\r\n\r\nexport const mockResourceServerEndpoints = {\r\n    tutors: new MockResourceServerEndpoint(() => tutors, {\r\n        '1': {\r\n            id: 1,\r\n            date: 1561334668346,\r\n            firstName: 'John',\r\n            lastName: 'Doe',\r\n            friendlyName: 'Jo',\r\n            friendlyFullName: 'Jo-Do',\r\n            grade: 12,\r\n            mods: [1, 2],\r\n            modsPref: [1],\r\n            subjectList: 'Geometry, Spanish'\r\n        },\r\n        '2': {\r\n            id: 2,\r\n            date: 1561335668346,\r\n            firstName: 'Mary',\r\n            lastName: 'Watson',\r\n            friendlyName: 'Ma',\r\n            friendlyFullName: 'Ma-W',\r\n            grade: 9,\r\n            mods: [3, 4],\r\n            modsPref: [4],\r\n            subjectList: 'English, French'\r\n        }\r\n    }),\r\n    learners: new MockResourceServerEndpoint(() => learners, {\r\n        '1': {\r\n            id: 1,\r\n            date: 1561334668346,\r\n            firstName: 'Alex',\r\n            lastName: 'Doe',\r\n            friendlyName: 'Al',\r\n            friendlyFullName: 'Al-D',\r\n            grade: 12\r\n        }\r\n    }),\r\n    bookings: new MockResourceServerEndpoint(() => bookings, {}),\r\n    matchings: new MockResourceServerEndpoint(() => matchings, {}),\r\n    requests: new MockResourceServerEndpoint(() => requests, {}),\r\n    requestSubmissions: new MockResourceServerEndpoint(\r\n        () => requestSubmissions,\r\n        {\r\n            '1': {\r\n                firstName: 'a',\r\n                lastName: 'b',\r\n                friendlyName: 'c',\r\n                friendlyFullName: 'd',\r\n                grade: 1,\r\n                mods: [1, 3, 4],\r\n                subject: 'asdf',\r\n                id: 1,\r\n                date: 1561730705297\r\n            }\r\n        }\r\n    )\r\n};\r\n\r\nasync function mockServer(args: any[]): Promise<ServerResponse<any>> {\r\n    // only for resources so far\r\n    try {\r\n        const mockArgs = JSON.parse(JSON.stringify(args));\r\n\r\n        return await mockResourceServerEndpoints[mockArgs[0]].replyToClientAsk(\r\n            mockArgs.slice(1)\r\n        );\r\n    } catch (err) {\r\n        return {\r\n            error: true,\r\n            val: null,\r\n            message: stringifyError(err)\r\n        };\r\n    }\r\n}\r\n\r\nexport namespace serverMethods {\r\n    export async function refreshRequestSubmissionsWithForm() {\r\n        return askServer(['refreshRequestSubmissionsWithForm']);\r\n    }\r\n\r\n    export async function debug() {\r\n        return askServer(['debug']);\r\n    }\r\n}\r\n","import { container, Widget, Record, ResourceFieldInfo } from '../core/shared';\r\nimport { FormValueWidget } from './ui';\r\n\r\nexport type FormWidget = Widget & {\r\n    getAllValues(): Record;\r\n    setAllValues(record: Record): void;\r\n};\r\nexport function FormWidget(fields: ResourceFieldInfo[]): FormWidget {\r\n    const widgets: { [fieldName: string]: FormValueWidget<any> } = {};\r\n    const dom = container('<form></form>')(\r\n        fields.map(({ title, type, name }) => {\r\n            const widget = type();\r\n            widgets[name] = widget;\r\n            return container('<div class=\"form-group row\"></div>')(\r\n                container('<label class=\"col-2 col-form-label\"></label>')(\r\n                    title\r\n                ),\r\n                container('<div class=\"col-10\"></div>')(widget.dom)\r\n            );\r\n        })\r\n    );\r\n    return {\r\n        dom,\r\n        getAllValues(): Record {\r\n            const result = {};\r\n            for (const { name } of fields) {\r\n                result[name] = widgets[name].getValue();\r\n            }\r\n            return result as Record;\r\n        },\r\n        setAllValues(values: Record) {\r\n            for (const [name, value] of Object.entries(values)) {\r\n                if (widgets[name] === undefined) {\r\n                    throw new Error(\r\n                        'name ' + String(name) + ' does not exist in form'\r\n                    );\r\n                }\r\n                widgets[name].setValue(value);\r\n            }\r\n        }\r\n    };\r\n}\r\n","import {\r\n    container,\r\n    DomWidget,\r\n    hideWindow,\r\n    removeWindow,\r\n    addWindow,\r\n    Widget,\r\n    state,\r\n    Event\r\n} from '../core/shared';\r\nimport { ButtonWidget } from './ui';\r\n\r\nclass KeyMaker {\r\n    private nextKey: number = 0;\r\n    makeKey(): number {\r\n        const result = this.nextKey;\r\n        this.nextKey += 1;\r\n        return result;\r\n    }\r\n}\r\n\r\nconst windowKeyMaker = new KeyMaker();\r\n\r\n// Assume that all windows are tiled. So all WindowWidgets will be made from makeTiledWindow().\r\n\r\nfunction WindowWidget(content: JQuery, actionBarContent: JQuery): Widget {\r\n    return DomWidget(\r\n        container('<div class=\"card m-3\"></div>')(\r\n            container('<div class=\"card-header\"></div>')(actionBarContent),\r\n            container('<div class=\"card-body\"></div>')(content)\r\n        )\r\n    );\r\n}\r\n\r\nexport function useTiledWindow(\r\n    content: JQuery,\r\n    actionBarContent: JQuery,\r\n    title: string,\r\n    onLoad: Event = new Event()\r\n): {\r\n    minimizeWindow: () => void;\r\n    closeWindow: () => void;\r\n    windowWidget: Widget;\r\n    onLoad: Event;\r\n} {\r\n    const key = windowKeyMaker.makeKey();\r\n    const windowWidget = WindowWidget(content, actionBarContent);\r\n    addWindow(windowWidget, key, title, onLoad);\r\n    return {\r\n        windowWidget,\r\n        minimizeWindow: () => hideWindow(key),\r\n        closeWindow: () => removeWindow(key),\r\n        onLoad\r\n    };\r\n}\r\n","/*\r\nTODO: badge, dropdown, and search\r\n*/\r\nimport { container, Widget, DomWidget, ObservableState } from '../core/shared';\r\nimport { AskStatus } from '../core/server';\r\n\r\n/*export function LoaderWidget() {\r\n    const spinner = container('<div></div>')(\r\n        $('<strong>Loading...</strong>'),\r\n        $('<div class=\"spinner-border\"></div>')\r\n    );\r\n    const dom = container('<div></div>')(spinner);\r\n    const onLoaded = (child: JQuery) => {\r\n        dom.empty();\r\n        dom.append(child);\r\n    };\r\n    const onError = (message: string) => {\r\n        const errorMessageDom = container(\r\n            '<div class=\"alert alert-danger\"></div>'\r\n        )(container('<h1></h1>')('Error'), container('<span></span>')(message));\r\n        dom.empty();\r\n        dom.append(errorMessageDom);\r\n    };\r\n\r\n    return {\r\n        dom,\r\n        onLoaded,\r\n        onError\r\n    };\r\n}*/\r\n\r\nexport function ErrorWidget(message: string): Widget {\r\n    const dom = container('<div class=\"alert alert-danger\"></div>')(\r\n        container('<h1></h1>')('Error'),\r\n        $(\r\n            '<p><strong>An error occurred. You can try closing the window and opening again.</strong></p>'\r\n        ),\r\n        container('<span></span>')(message)\r\n    );\r\n    return DomWidget(dom);\r\n}\r\n\r\nexport function ButtonWidget(\r\n    content: string | JQuery,\r\n    onClick: () => void,\r\n    variant: string = 'primary'\r\n): Widget {\r\n    // to create an outline button, add \"outline\" to the variant\r\n    if (variant === 'outline') variant = 'outline-primary';\r\n    if (typeof content === 'string') {\r\n        return DomWidget(\r\n            $('<button></button>')\r\n                .text(content)\r\n                .addClass('btn btn-' + variant)\r\n                .click(onClick)\r\n        );\r\n    } else {\r\n        return DomWidget(\r\n            $('<button></button>')\r\n                .append(content)\r\n                .addClass('btn btn-' + variant)\r\n                .click(onClick)\r\n        );\r\n    }\r\n}\r\n\r\nconst modalHtmlString = `<div class=\"modal\" tabindex=\"-1\" role=\"dialog\">\r\n<div class=\"modal-dialog\" role=\"document\">\r\n  <div class=\"modal-content\">\r\n    <div class=\"modal-header\">\r\n      <h5 class=\"modal-title\"></h5>\r\n      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>`;\r\n\r\nexport async function showModal(\r\n    title: string,\r\n    content: string | JQuery,\r\n    buildButtons: (\r\n        buildButton: (\r\n            text: string,\r\n            style: string,\r\n            onClick?: () => void\r\n        ) => JQuery\r\n    ) => JQuery[]\r\n): Promise<void> {\r\n    const dom = $(modalHtmlString);\r\n    dom.find('.modal-title').text(title);\r\n    dom.find('.modal-body').append(\r\n        typeof content === 'string' ? container('<p></p>')(content) : content\r\n    );\r\n    dom.find('.modal-footer').append(\r\n        buildButtons.call(\r\n            null,\r\n            (text: string, style: string, onClick?: () => void) =>\r\n                $('<button type=\"button\" class=\"btn\" data-dismiss=\"modal\">')\r\n                    .addClass('btn-' + style)\r\n                    .click(onClick)\r\n                    .text(text)\r\n        )\r\n    );\r\n    dom.modal();\r\n    return new Promise(res => {\r\n        dom.on('hidden.bs.modal', () => res());\r\n    });\r\n}\r\n\r\nexport type FormValueWidget<T> = Widget & {\r\n    getValue(): any;\r\n    setValue(newVal: T): JQuery;\r\n    onChange(doThis: (newVal: T) => void): void;\r\n};\r\n\r\nexport function FormStringInputWidget(type: string): FormValueWidget<string> {\r\n    const dom = $(`<input class=\"form-control\" type=\"${type}\">`);\r\n    return {\r\n        dom,\r\n        getValue(): string {\r\n            return String(dom.val());\r\n        },\r\n        setValue(newVal: string): JQuery {\r\n            return dom.val(newVal);\r\n        },\r\n        onChange(doThis: (newVal: string) => void): void {\r\n            dom.val(() => doThis.call(null, dom.val() as string));\r\n        }\r\n    };\r\n}\r\n\r\nexport function FormNumberInputWidget(type: string): FormValueWidget<number> {\r\n    let dom: JQuery = null;\r\n    if (type === 'number') {\r\n        dom = $(`<input class=\"form-control\" type=\"number\">`);\r\n    }\r\n    if (type === 'datetime-local') {\r\n        dom = $(`<input class=\"form-control\" type=\"datetime-local\">`);\r\n    }\r\n    if (type === 'id') {\r\n        // TODO: create a resource selection dropdown, or at least a name search\r\n        dom = $(`<input class=\"form-control\" type=\"number\">`);\r\n    }\r\n    function getVal(): number {\r\n        if (type == 'datetime-local') {\r\n            // a hack to get around Typescript types\r\n            const htmlEl: any = dom.get(0);\r\n            const date = htmlEl.valueAsNumber as number;\r\n            return date ? date : 0;\r\n        }\r\n        return Number(dom.val());\r\n    }\r\n    return {\r\n        dom,\r\n        getValue(): number {\r\n            return getVal();\r\n        },\r\n        setValue(val: number): JQuery {\r\n            if (type == 'datetime-local') {\r\n                // a hack to get around Typescript types\r\n                const htmlEl: any = dom.get(0);\r\n                htmlEl.valueAsNumber = val;\r\n                return dom;\r\n            }\r\n            return dom.val(val);\r\n        },\r\n        onChange(doThis) {\r\n            dom.val(doThis.call(null, getVal()));\r\n        }\r\n    };\r\n}\r\n\r\nexport function FormNumberArrayInputWidget(\r\n    type: string\r\n): FormValueWidget<number[]> {\r\n    let dom: JQuery = null;\r\n    if (type === 'number') {\r\n        // arrays are entered as comma-separated values\r\n        dom = $(`<input class=\"form-control\" type=\"text\">`);\r\n    } else {\r\n        throw new Error('unsupported type');\r\n    }\r\n    function getVal(): number[] {\r\n        return String(dom.val())\r\n            .split(',')\r\n            .map(x => x.trim())\r\n            .filter(x => x !== '')\r\n            .map(x => Number(x));\r\n    }\r\n    return {\r\n        dom,\r\n        getValue(): number[] {\r\n            return getVal();\r\n        },\r\n        setValue(val: number[]): JQuery {\r\n            return dom.val(val.map(x => String(x)).join(', '));\r\n        },\r\n        onChange(doThis) {\r\n            dom.val(doThis.call(null, getVal()));\r\n        }\r\n    };\r\n}\r\n\r\nexport function StringField(type: string) {\r\n    return () => FormStringInputWidget(type);\r\n}\r\nexport function NumberField(type: string) {\r\n    return () => FormNumberInputWidget(type);\r\n}\r\nexport function SelectField(options: string[], optionTitles: string[]) {\r\n    return () => FormSelectWidget(options, optionTitles);\r\n}\r\nexport function NumberArrayField(type: string) {\r\n    return () => FormNumberArrayInputWidget(type);\r\n}\r\n\r\nexport type FormFieldType = () => FormValueWidget<any>;\r\n\r\nexport function FormSubmitWidget(text: string): Widget {\r\n    return DomWidget(\r\n        $(\r\n            '<button class=\"btn btn-outline-success type=\"submit\"></button>'\r\n        ).text(text)\r\n    );\r\n}\r\nexport function FormSelectWidget(\r\n    options: string[],\r\n    optionTitles: string[]\r\n): FormValueWidget<string> {\r\n    const dom = container('<select class=\"form-control\"></select>')(\r\n        options.map((_o, i) =>\r\n            container('<option></option>')(optionTitles[i]).val(options[i])\r\n        )\r\n    );\r\n    const k = {\r\n        dom,\r\n        getValue(): string {\r\n            return dom.val() as string;\r\n        },\r\n        setValue(val: string): JQuery {\r\n            return dom.val(val);\r\n        },\r\n        onChange(doThis: (newVal: string) => void): void {\r\n            dom.change(() => doThis.call(null, dom.val() as string));\r\n        }\r\n    };\r\n    return k;\r\n}\r\nexport function FormToggleWidget(\r\n    titleWhenFalse: string,\r\n    titleWhenTrue: string,\r\n    styleWhenFalse: string = 'outline-secondary',\r\n    styleWhenTrue: string = 'primary'\r\n): FormValueWidget<boolean> {\r\n    function setVal(newVal: boolean): JQuery {\r\n        if (val === newVal) return;\r\n        if (newVal) {\r\n            val = true;\r\n            dom.text(titleWhenTrue);\r\n            dom.removeClass('btn-' + styleWhenFalse);\r\n            dom.addClass('btn-' + styleWhenTrue);\r\n            return dom;\r\n        } else {\r\n            val = false;\r\n            dom.text(titleWhenFalse);\r\n            dom.removeClass('btn-' + styleWhenTrue);\r\n            dom.addClass('btn-' + styleWhenFalse);\r\n            return dom;\r\n        }\r\n    }\r\n    const dom = $('<button class=\"btn\"></button>').click(() => {\r\n        if (val === null) {\r\n            throw new Error('improper init of toggle button');\r\n        }\r\n        setVal(!val);\r\n    });\r\n    let val = null;\r\n\r\n    const k = {\r\n        dom,\r\n        getValue(): boolean {\r\n            if (val === null)\r\n                throw new Error(\r\n                    'attempt to read toggle button value before init'\r\n                );\r\n            return val;\r\n        },\r\n        setValue(val: boolean): JQuery {\r\n            setVal(val);\r\n            return dom;\r\n        },\r\n        onChange(doThis: (newVal: boolean) => void): void {\r\n            dom.click(() => doThis.call(null, val));\r\n        }\r\n    };\r\n    return k;\r\n}\r\nexport function SearchItemWidget(onSubmit: () => void): Widget {\r\n    return DomWidget(\r\n        $('<form class=\"form-inline\"></form>')\r\n            .append(FormStringInputWidget('search').dom)\r\n            .append(FormSubmitWidget('Search').dom)\r\n            .submit(ev => {\r\n                ev.preventDefault();\r\n                onSubmit.call(null);\r\n            })\r\n    );\r\n}\r\n\r\nexport function createMarkerLink(text: string, onClick: () => void): JQuery {\r\n    return $('<a style=\"cursor: pointer\"></a>')\r\n        .text(text)\r\n        .click(onClick);\r\n}\r\n\r\nexport function MessageTemplateWidget(content: string): Widget {\r\n    const textarea = $('<textarea class=\"form-control\"></textarea>');\r\n    textarea.val(content);\r\n\r\n    const button = ButtonWidget('Copy to clipboard', () => {\r\n        const htmlEl: any = textarea[0];\r\n        htmlEl.select();\r\n        document.execCommand('copy');\r\n        button.val('Copied!');\r\n        setTimeout(() => button.val('Copy to clipboard'), 1000);\r\n    });\r\n    return DomWidget(\r\n        container('<div class=\"card\"></div>')(\r\n            container('<div class=\"card-body\"></div>')(textarea, button)\r\n        )\r\n    );\r\n}\r\n","import { DomWidget, container, Widget } from '../core/shared';\r\nimport { ButtonWidget } from './ui';\r\n\r\nexport type ActionBarConfig = [string, () => void][];\r\n\r\nexport function ActionBarWidget(config: ActionBarConfig): Widget {\r\n    function makeButton(name: string, handler: () => void): Widget {\r\n        if (name == 'Edit') return ButtonWidget('Edit', handler, 'outline');\r\n        if (name == 'Delete')\r\n            return ButtonWidget('Delete', handler, 'outline-danger');\r\n        if (name == 'Save') return ButtonWidget('Save', handler, 'outline');\r\n        if (name == 'Cancel')\r\n            return ButtonWidget('Cancel', handler, 'outline-secondary');\r\n        if (name == 'Create') return ButtonWidget('Create', handler, 'outline');\r\n        if (name == 'Close') return ButtonWidget('Close', handler, 'outline');\r\n        throw new Error('button not supported');\r\n    }\r\n    return DomWidget(\r\n        container('<div class=\"d-flex justify-content-end\"></div>')(\r\n            config.map(([name, handler]) =>\r\n                makeButton(name, handler).dom.addClass('ml-2')\r\n            )\r\n        )\r\n    );\r\n}\r\n","import { RecordCollection, Record, container } from '../core/shared';\r\n\r\nexport function TableWidget<T>(\r\n    headerTitles: string[],\r\n    makeRowContent: (item: T) => (JQuery | string)[]\r\n) {\r\n    let values: T[] = [];\r\n    const dom = $('<table class=\"table\"></table>');\r\n    function setAllValues(collection: { [key: string]: T } | T[]) {\r\n        if (typeof collection === 'object') {\r\n            values = Object.values(collection);\r\n        } else {\r\n            values = collection;\r\n        }\r\n        rebuildTable();\r\n    }\r\n    function rebuildTable() {\r\n        dom.empty();\r\n        // headers\r\n        dom.append(\r\n            container('<thead></thead>')(\r\n                container('<tr></tr>')(\r\n                    headerTitles.map(str =>\r\n                        container('<th scope=\"col\"></th>')(str)\r\n                    )\r\n                )\r\n            )\r\n        );\r\n        // content\r\n        dom.append(\r\n            container('<tbody></tbody>')(\r\n                values.map(record =>\r\n                    container('<tr></tr>')(\r\n                        makeRowContent(record).map((rowContent, i) =>\r\n                            container('<td></td>')(\r\n                                typeof rowContent === 'string'\r\n                                    ? document.createTextNode(rowContent)\r\n                                    : rowContent\r\n                            )\r\n                        )\r\n                    )\r\n                )\r\n            )\r\n        );\r\n    }\r\n    rebuildTable();\r\n    return {\r\n        dom,\r\n        setAllValues\r\n    };\r\n}\r\n","import {\r\n    askServer,\r\n    Ask,\r\n    AskStatus,\r\n    AskFinished,\r\n    getResultOrFail\r\n} from './server';\r\nimport { FormWidget } from '../widgets/Form';\r\nimport { useTiledWindow } from '../widgets/Window';\r\n\r\nimport {\r\n    StringField,\r\n    NumberField,\r\n    SelectField,\r\n    FormFieldType,\r\n    ErrorWidget,\r\n    ButtonWidget,\r\n    NumberArrayField,\r\n    createMarkerLink\r\n} from '../widgets/ui';\r\nimport { ActionBarWidget } from '../widgets/ActionBar';\r\nimport { TableWidget } from '../widgets/Table';\r\n\r\nexport function MyTesting() {\r\n    return 4;\r\n}\r\n\r\n/*\r\n\r\nALL BASIC CLASSES AND BASIC UTILS\r\n\r\n*/\r\n\r\nexport function stringifyError(error: any) {\r\n    console.error(error);\r\n    if (error instanceof Error) {\r\n        return JSON.stringify(error, Object.getOwnPropertyNames(error));\r\n    }\r\n    if (typeof error === 'object') {\r\n        return JSON.stringify(error);\r\n    }\r\n    return error;\r\n}\r\n\r\nexport class Event {\r\n    listeners: (() => any)[];\r\n\r\n    constructor() {\r\n        this.listeners = [];\r\n    }\r\n    trigger() {\r\n        for (const listener of this.listeners) {\r\n            listener();\r\n        }\r\n    }\r\n    get chain() {\r\n        return this.trigger.bind(this);\r\n    }\r\n    listen(cb: () => any) {\r\n        this.listeners.push(cb);\r\n    }\r\n}\r\n\r\nexport function container(newTag: string) {\r\n    return (...children: any) => {\r\n        if (Array.isArray(children[0])) {\r\n            return $(newTag).append(\r\n                children[0].map((x: any) =>\r\n                    typeof x === 'string' ? $(document.createTextNode(x)) : x\r\n                )\r\n            );\r\n        }\r\n        return $(newTag).append(\r\n            children.map((x: any) =>\r\n                typeof x === 'string' ? $(document.createTextNode(x)) : x\r\n            )\r\n        );\r\n    };\r\n}\r\n\r\nexport type Widget = {\r\n    dom: JQuery;\r\n    [others: string]: any;\r\n};\r\nexport function DomWidget(dom: JQuery) {\r\n    return { dom };\r\n}\r\n\r\nexport class ObservableState<T> {\r\n    val: T;\r\n    change: Event;\r\n    constructor(initialValue: T) {\r\n        this.val = initialValue;\r\n        this.change = new Event();\r\n\r\n        // TODO: make sure this works\r\n        this.change.trigger();\r\n    }\r\n    changeTo(val: T) {\r\n        this.val = val;\r\n        this.change.trigger();\r\n    }\r\n}\r\n\r\nexport function generateStringOfMods(\r\n    mods: number[],\r\n    modsPref: number[]\r\n): string {\r\n    return mods\r\n        .map(mod => String(mod) + (modsPref.includes(mod) ? '*' : ''))\r\n        .join(', ');\r\n}\r\n\r\n/*\r\n\r\nRECORDS\r\n\r\n*/\r\nexport type Record = {\r\n    id: number;\r\n    date: number;\r\n    [others: string]: any;\r\n};\r\nexport type RecordCollection = {\r\n    [id: string]: Record;\r\n};\r\n\r\n/*\r\n\r\nRESOURCES\r\n\r\n*/\r\n\r\nexport class ResourceEndpoint {\r\n    name: string;\r\n    constructor(name: string) {\r\n        this.name = name;\r\n    }\r\n    async askEndpoint(...partialArgs: any[]): Promise<AskFinished<any>> {\r\n        return askServer([this.name].concat(partialArgs));\r\n    }\r\n\r\n    // NOTE: ALL THESE RETURN PROMISES\r\n\r\n    retrieveAll(): Promise<AskFinished<RecordCollection>> {\r\n        return this.askEndpoint('retrieveAll');\r\n    }\r\n    create(record: Record): Promise<AskFinished<Record>> {\r\n        return this.askEndpoint('create', record);\r\n    }\r\n    delete(id: number): Promise<AskFinished<void>> {\r\n        return this.askEndpoint('delete', id);\r\n    }\r\n    debug(): Promise<AskFinished<any>> {\r\n        return this.askEndpoint('debug');\r\n    }\r\n    update(record: Record): Promise<AskFinished<void>> {\r\n        return this.askEndpoint('update', record);\r\n    }\r\n}\r\nexport class ResourceObservable extends ObservableState<\r\n    AskFinished<RecordCollection>\r\n> {\r\n    endpoint: ResourceEndpoint;\r\n\r\n    constructor(endpoint: ResourceEndpoint) {\r\n        super({\r\n            status: AskStatus.ERROR,\r\n            message: 'resource was not initialized properly'\r\n        });\r\n        this.endpoint = endpoint;\r\n    }\r\n    async initialize() {\r\n        // If this fails, there will be some cascading failure throughout the app, but only when the resource is actually used. This prevents catastrophic failure the moment a resource fails.\r\n        const newVal: AskFinished<\r\n            RecordCollection\r\n        > = await this.endpoint.retrieveAll();\r\n        this.changeTo(newVal);\r\n        return newVal;\r\n    }\r\n\r\n    getRecordOrFail(id: number) {\r\n        const val = this.getLoadedOrFail();\r\n        if (val[String(id)] === undefined) {\r\n            throw new Error(\r\n                'record not available: ' + this.endpoint.name + '/#' + id\r\n            );\r\n        }\r\n        return val[String(id)];\r\n    }\r\n\r\n    findRecordOrFail(id: number) {\r\n        const val = this.getLoadedOrFail();\r\n        if (val[String(id)] === undefined) {\r\n            return null;\r\n        }\r\n        return val[String(id)];\r\n    }\r\n\r\n    getLoadedOrFail(): RecordCollection {\r\n        if (this.val.status != AskStatus.LOADED) {\r\n            throw new Error('resource is not loaded: ' + this.endpoint.name);\r\n        }\r\n        return this.val.val;\r\n    }\r\n\r\n    async forceRefresh(): Promise<void> {\r\n        const newVal: AskFinished<\r\n            RecordCollection\r\n        > = await this.endpoint.retrieveAll();\r\n        this.changeTo(newVal);\r\n    }\r\n\r\n    getRecordCollectionOrFail(): RecordCollection {\r\n        if (this.val.status == AskStatus.ERROR) {\r\n            throw this.val.message;\r\n        } else {\r\n            return this.val.val;\r\n        }\r\n    }\r\n    async dependOnRecordOrFail(id: number): Promise<Record> {\r\n        await this.getRecordCollectionOrFail();\r\n        return this.getRecordOrFail(id);\r\n    }\r\n\r\n    async updateRecord(record: Record): Promise<AskFinished<void>> {\r\n        if (this.val.status !== AskStatus.LOADED) {\r\n            return this.val;\r\n        }\r\n\r\n        const ask = await this.endpoint.update(record);\r\n        if (ask.status == AskStatus.LOADED) {\r\n            // update the client to match the server (sync)\r\n            this.val.val[String(record.id)] = record;\r\n            this.change.trigger();\r\n        }\r\n\r\n        return ask;\r\n    }\r\n\r\n    async createRecord(record: Record): Promise<AskFinished<Record>> {\r\n        const ask = await this.endpoint.create(record);\r\n        if (this.val.status !== AskStatus.LOADED) {\r\n            return this.val;\r\n        }\r\n\r\n        if (ask.status == AskStatus.LOADED) {\r\n            // update the client to match the server (sync)\r\n            this.val.val[String(ask.val.id)] = ask.val;\r\n            this.change.trigger();\r\n        }\r\n        return ask;\r\n    }\r\n\r\n    async deleteRecord(id: number): Promise<AskFinished<void>> {\r\n        const ask = await this.endpoint.delete(id);\r\n        if (\r\n            ask.status == AskStatus.LOADED &&\r\n            this.val.status == AskStatus.LOADED\r\n        ) {\r\n            // update the client to match the server (sync)\r\n            delete this.val.val[String(id)];\r\n            this.change.trigger();\r\n        }\r\n        return ask;\r\n    }\r\n\r\n    onServerNotificationUpdate(record: Record) {\r\n        if (this.val.status === AskStatus.LOADED) {\r\n            this.val.val[String(record.id)] = record;\r\n            this.change.trigger();\r\n        }\r\n    }\r\n\r\n    onServerNotificationCreate(record: Record) {\r\n        if (this.val.status === AskStatus.LOADED) {\r\n            this.val.val[String(record.id)] = record;\r\n            this.change.trigger();\r\n        }\r\n    }\r\n\r\n    onServerNotificationDelete(id: number) {\r\n        if (this.val.status === AskStatus.LOADED) {\r\n            delete this.val.val[String(id)];\r\n            this.change.trigger();\r\n        }\r\n    }\r\n}\r\n\r\nexport class Resource {\r\n    name: string;\r\n    endpoint: ResourceEndpoint;\r\n    state: ResourceObservable;\r\n    info: ResourceInfo;\r\n\r\n    constructor(name: string, info: ResourceInfo) {\r\n        this.name = name;\r\n        this.endpoint = new ResourceEndpoint(this.name);\r\n        this.state = new ResourceObservable(this.endpoint);\r\n        this.info = info;\r\n    }\r\n\r\n    makeFormWidget() {\r\n        return FormWidget(this.info.fields);\r\n    }\r\n\r\n    createMarker(\r\n        id: number,\r\n        builder: (record: Record) => string,\r\n        onClick: () => void = () => this.makeTiledEditWindow(id)\r\n    ): JQuery {\r\n        return createMarkerLink(this.createLabel(id, builder), onClick);\r\n    }\r\n\r\n    createLabel(id: number, builder: (record: Record) => string): string {\r\n        const record = this.state.getRecordOrFail(id);\r\n        return builder.call(null, record);\r\n    }\r\n\r\n    // The edit window is kind of combined with the view window.\r\n    async makeTiledEditWindow(id: number): Promise<void> {\r\n        let record: Record = null;\r\n        let errorMessage: string = '';\r\n        let windowLabel: string = 'ERROR in: ' + this.info.title + ' #' + id;\r\n        try {\r\n            function capitalizeWord(w: string) {\r\n                return w.charAt(0).toUpperCase() + w.slice(1);\r\n            }\r\n\r\n            await this.state.getRecordCollectionOrFail();\r\n            record = this.state.getRecordOrFail(id);\r\n            windowLabel =\r\n                capitalizeWord(this.info.title) +\r\n                ': ' +\r\n                this.createLabel(id, this.info.makeLabel);\r\n\r\n            const form = this.makeFormWidget();\r\n            form.setAllValues(record);\r\n\r\n            const { closeWindow } = useTiledWindow(\r\n                container('<div></div>')(\r\n                    container('<h1></h1>')(windowLabel),\r\n                    form.dom\r\n                ),\r\n                ActionBarWidget([\r\n                    ['Delete', () => this.makeTiledDeleteWindow(id)],\r\n                    ['Save', () => this.endpoint.update(form.getAllValues())],\r\n                    ['Close', () => closeWindow()]\r\n                ]).dom,\r\n                windowLabel\r\n            );\r\n        } catch (err) {\r\n            errorMessage = stringifyError(err);\r\n            const { closeWindow } = useTiledWindow(\r\n                ErrorWidget(errorMessage).dom,\r\n                ActionBarWidget([['Close', () => closeWindow()]]).dom,\r\n                windowLabel\r\n            );\r\n        }\r\n    }\r\n\r\n    async makeTiledCreateWindow(): Promise<void> {\r\n        let errorMessage: string = '';\r\n        let windowLabel: string = 'ERROR in: create new ' + this.info.title;\r\n        try {\r\n            await this.state.getRecordCollectionOrFail();\r\n            windowLabel = 'Create new ' + this.info.title;\r\n\r\n            const form = this.makeFormWidget();\r\n            form.setAllValues({ id: -1, date: Date.now() });\r\n\r\n            const { closeWindow } = useTiledWindow(\r\n                container('<div></div>')(\r\n                    container('<h1></h1>')(windowLabel),\r\n                    form.dom\r\n                ),\r\n                ActionBarWidget([\r\n                    [\r\n                        'Create',\r\n                        async () => {\r\n                            const ask = await this.state.createRecord(\r\n                                form.getAllValues()\r\n                            );\r\n                            if (ask.status === AskStatus.ERROR) {\r\n                                alert('ERROR!\\n' + stringifyError(ask.message));\r\n                            }\r\n                            closeWindow();\r\n                        }\r\n                    ],\r\n                    ['Close', () => closeWindow()]\r\n                ]).dom,\r\n                windowLabel\r\n            );\r\n        } catch (err) {\r\n            errorMessage = stringifyError(err);\r\n            const { closeWindow } = useTiledWindow(\r\n                ErrorWidget(errorMessage).dom,\r\n                ActionBarWidget([['Close', () => closeWindow()]]).dom,\r\n                windowLabel\r\n            );\r\n        }\r\n    }\r\n\r\n    async makeTiledViewAllWindow(): Promise<void> {\r\n        let recordCollection: RecordCollection = null;\r\n        let errorMessage: string = '';\r\n        let windowLabel: string = 'ERROR in: view all ' + this.info.pluralTitle;\r\n        try {\r\n            const onLoad = new Event();\r\n\r\n            recordCollection = await this.state.getRecordCollectionOrFail();\r\n\r\n            const table = TableWidget(\r\n                this.info.tableFieldTitles.concat('View'),\r\n                (record: Record) =>\r\n                    this.info\r\n                        .makeTableRowContent(record)\r\n                        .concat(\r\n                            ButtonWidget('View', () => {\r\n                                closeThisWindow();\r\n                                this.makeTiledEditWindow(record.id)\r\n                            }).dom\r\n                        )\r\n            );\r\n\r\n            onLoad.listen(() => {\r\n                recordCollection = this.state.getLoadedOrFail();\r\n                table.setAllValues(recordCollection);\r\n            });\r\n\r\n            windowLabel = 'View all ' + this.info.pluralTitle;\r\n\r\n            const { closeWindow } = useTiledWindow(\r\n                container('<div></div>')(\r\n                    container('<h1></h1>')(windowLabel),\r\n                    table.dom\r\n                ),\r\n                ActionBarWidget([\r\n                    ['Create', () => this.makeTiledCreateWindow()],\r\n                    ['Close', () => closeWindow()]\r\n                ]).dom,\r\n                windowLabel,\r\n                onLoad\r\n            );\r\n            function closeThisWindow() {\r\n                closeWindow();\r\n            }\r\n        } catch (err) {\r\n            errorMessage = stringifyError(err);\r\n            const { closeWindow } = useTiledWindow(\r\n                ErrorWidget(errorMessage).dom,\r\n                ActionBarWidget([\r\n                    ['Create', () => this.makeTiledCreateWindow()],\r\n                    ['Close', () => closeWindow()]\r\n                ]).dom,\r\n                windowLabel\r\n            );\r\n        }\r\n    }\r\n\r\n    makeTiledDeleteWindow(id: number) {\r\n        const windowLabel =\r\n            'Delete this ' +\r\n            this.info.title +\r\n            '? (' +\r\n            this.createLabel(id, record => record.friendlyFullName) +\r\n            ')';\r\n        const { windowWidget, closeWindow } = useTiledWindow(\r\n            container('<div></div>')(\r\n                container('<h1></h1>')('Delete?'),\r\n                container('<p></p>')('Are you sure you want to delete this?')\r\n            ),\r\n            ActionBarWidget([\r\n                [\r\n                    'Delete',\r\n                    () =>\r\n                        this.endpoint\r\n                            .delete(id)\r\n                            .then(() => alert('Deletion successful!'))\r\n                ],\r\n                ['Cancel', () => closeWindow]\r\n            ]).dom,\r\n            windowLabel\r\n        );\r\n        return windowWidget;\r\n    }\r\n}\r\n\r\n/*\r\n\r\nIMPORTANT GLOBALS\r\n\r\n*/\r\n\r\nexport const state = {\r\n    tiledWindows: new ObservableState<\r\n        {\r\n            key: number;\r\n            window: Widget;\r\n            visible: boolean;\r\n            title: string;\r\n            onLoad: Event;\r\n        }[]\r\n    >([])\r\n};\r\n\r\n/*\r\n\r\nWINDOW-RELATED GLOBAL METHODS\r\n\r\n*/\r\n\r\nexport function addWindow(\r\n    window: Widget,\r\n    windowKey: number,\r\n    title: string,\r\n    onLoad: Event\r\n) {\r\n    // The onLoad event is triggered BEFORE the window is added. If the first onLoad call fails, no window will be created.\r\n    onLoad.trigger();\r\n\r\n    state.tiledWindows.val.push({\r\n        key: windowKey,\r\n        window,\r\n        visible: true,\r\n        title,\r\n        onLoad\r\n    });\r\n    for (const window of state.tiledWindows.val) {\r\n        if (window.key === windowKey) {\r\n            window.visible = true;\r\n        } else {\r\n            // you can't have two visible windows at once\r\n            // so, hide all other windows\r\n            window.visible = false;\r\n        }\r\n    }\r\n    state.tiledWindows.change.trigger();\r\n}\r\n\r\nexport function removeWindow(windowKey: number) {\r\n    // MEMORY LEAK PREVENTION: explicitly null out the onLoad event when the whole window is deleted\r\n    for (const window of state.tiledWindows.val) {\r\n        if (window.key === windowKey) {\r\n            window.onLoad = null;\r\n        }\r\n    }\r\n\r\n    state.tiledWindows.val = state.tiledWindows.val.filter(\r\n        ({ key }) => key !== windowKey\r\n    );\r\n    state.tiledWindows.change.trigger();\r\n}\r\n\r\nexport function hideWindow(windowKey: number) {\r\n    for (const window of state.tiledWindows.val) {\r\n        if (window.key === windowKey) {\r\n            window.visible = false;\r\n        }\r\n    }\r\n    state.tiledWindows.change.trigger();\r\n}\r\n\r\nexport function showWindow(windowKey: number) {\r\n    for (const window of state.tiledWindows.val) {\r\n        if (window.key === windowKey) {\r\n            window.visible = true;\r\n        } else {\r\n            // you can't have two visible windows at once\r\n            // so, hide all other windows\r\n            window.visible = false;\r\n        }\r\n    }\r\n    state.tiledWindows.change.trigger();\r\n\r\n    // trigger the onload event\r\n    // TODO: removed the event for now, and might add back in later\r\n    /*for (const window of state.tiledWindows.val) {\r\n        if (window.key === windowKey) {\r\n            window.onLoad.trigger();\r\n        }\r\n    }*/\r\n}\r\n\r\n/*\r\n\r\nRESOURCE INFO\r\n\r\n*/\r\n\r\nexport type ResourceFieldInfo = {\r\n    title: string;\r\n    name: string;\r\n    type: FormFieldType;\r\n};\r\n\r\nexport type ResourceInfo = {\r\n    fields: ResourceFieldInfo[];\r\n    tableFieldTitles: string[];\r\n    makeTableRowContent: (record: Record) => (JQuery | string)[];\r\n    title: string;\r\n    pluralTitle: string;\r\n    makeLabel: (record: Record) => string;\r\n};\r\n\r\nexport function processResourceInfo(\r\n    conf: UnprocessedResourceInfo\r\n): ResourceInfo {\r\n    let fields: ResourceFieldInfo[] = [];\r\n    for (const [name, type] of conf.fields) {\r\n        fields.push({\r\n            title: conf.fieldNameMap[name],\r\n            name,\r\n            type\r\n        });\r\n    }\r\n    fields = fields.concat([\r\n        {\r\n            title: 'ID',\r\n            name: 'id',\r\n            type: NumberField('number')\r\n        },\r\n        {\r\n            title: 'Date',\r\n            name: 'date',\r\n            type: NumberField('datetime-local')\r\n        }\r\n    ]);\r\n    return {\r\n        fields,\r\n        makeTableRowContent: conf.makeTableRowContent,\r\n        title: conf.title,\r\n        pluralTitle: conf.pluralTitle,\r\n        tableFieldTitles: conf.tableFieldTitles,\r\n        makeLabel: conf.makeLabel\r\n    };\r\n}\r\n\r\nexport type UnprocessedResourceInfo = {\r\n    fields: [string, FormFieldType][]; // name, string/number, type\r\n    fieldNameMap: { [name: string]: string };\r\n    tableFieldTitles: string[];\r\n    makeTableRowContent: (record: Record) => (JQuery | string)[];\r\n    title: string;\r\n    pluralTitle: string;\r\n    makeLabel: (record: Record) => string;\r\n};\r\n\r\nexport function makeBasicStudentConfig(): [string, FormFieldType][] {\r\n    return [\r\n        ['firstName', StringField('text')],\r\n        ['lastName', StringField('text')],\r\n        ['friendlyName', StringField('text')],\r\n        ['friendlyFullName', StringField('text')],\r\n        ['grade', NumberField('number')]\r\n    ];\r\n}\r\n\r\nconst fieldNameMap = {\r\n    firstName: 'First name',\r\n    lastName: 'Last name',\r\n    friendlyName: 'Friendly name',\r\n    friendlyFullName: 'Friendly full name',\r\n    grade: 'Grade',\r\n    learner: 'Learner',\r\n    tutor: 'Tutor',\r\n    status: 'Status',\r\n    mods: 'Mods',\r\n    mod: 'Mod',\r\n    modsPref: 'Preferred mods',\r\n    subjectList: 'Subjects',\r\n    request: 'Request',\r\n    subject: 'Subject(s)'\r\n};\r\nconst tutorsInfo: UnprocessedResourceInfo = {\r\n    fields: [\r\n        ...makeBasicStudentConfig(),\r\n        ['mods', NumberArrayField('number')],\r\n        ['modsPref', NumberArrayField('number')],\r\n        ['subjectList', StringField('text')]\r\n    ],\r\n    fieldNameMap,\r\n    tableFieldTitles: ['Name', 'Grade', 'Mods', 'Subjects'],\r\n    makeTableRowContent: record => [\r\n        tutors.createMarker(record.id, x => x.friendlyFullName),\r\n        record.grade,\r\n        generateStringOfMods(record.mods, record.modsPref),\r\n        record.subjectList\r\n    ],\r\n    title: 'tutor',\r\n    pluralTitle: 'tutors',\r\n    makeLabel: record => record.friendlyFullName\r\n};\r\nconst learnersInfo: UnprocessedResourceInfo = {\r\n    fields: [...makeBasicStudentConfig()],\r\n    fieldNameMap,\r\n    tableFieldTitles: ['Name', 'Grade'],\r\n    makeTableRowContent: record => [\r\n        learners.createMarker(record.id, x => x.friendlyFullName),\r\n        record.grade\r\n    ],\r\n    title: 'learner',\r\n    pluralTitle: 'learners',\r\n    makeLabel: record => record.friendlyFullName\r\n};\r\nconst requestsInfo: UnprocessedResourceInfo = {\r\n    fields: [\r\n        ['learner', NumberField('id')],\r\n        ['mods', NumberArrayField('number')],\r\n        ['subject', StringField('text')]\r\n    ],\r\n    fieldNameMap,\r\n    tableFieldTitles: ['Learner', 'Subject', 'Mods'],\r\n    makeTableRowContent: record => [\r\n        learners.createMarker(record.learner, x => x.friendlyFullName),\r\n        record.subject,\r\n        record.mods.join(', ')\r\n    ],\r\n    title: 'request',\r\n    pluralTitle: 'requests',\r\n    makeLabel: record =>\r\n        learners.createLabel(record.id, x => x.friendlyFullName)\r\n};\r\n\r\nconst bookingsInfo: UnprocessedResourceInfo = {\r\n    fields: [\r\n        ['request', NumberField('id')],\r\n        ['tutor', NumberField('id')],\r\n        ['mod', NumberField('number')],\r\n        [\r\n            'status',\r\n            SelectField(\r\n                [\r\n                    'unsent',\r\n                    'waitingForTutor',\r\n                    'waitingForLearner',\r\n                    'finalized',\r\n                    'rejected',\r\n                    'rejectedByTutor',\r\n                    'rejectedByLearner'\r\n                ],\r\n                [\r\n                    'Unsent',\r\n                    'Waiting for tutor',\r\n                    'Waiting for learner',\r\n                    'Finalized',\r\n                    'Rejected',\r\n                    'Rejected by tutor',\r\n                    'Rejected by learner'\r\n                ]\r\n            )\r\n        ]\r\n    ],\r\n    fieldNameMap,\r\n    tableFieldTitles: ['Learner', 'Tutor', 'Mod', 'Status'],\r\n    makeTableRowContent: record => [\r\n        learners.createMarker(\r\n            requests.state.getRecordOrFail(record.request).learner,\r\n            x => x.friendlyFullName\r\n        ),\r\n        tutors.createMarker(record.tutor, x => x.friendlyFullName),\r\n        record.mod,\r\n        record.status\r\n    ],\r\n    title: 'booking',\r\n    pluralTitle: 'bookings',\r\n    makeLabel: record =>\r\n        tutors.state.getRecordOrFail(record.tutor).friendlyFullName +\r\n        ' <> ' +\r\n        learners.state.getRecordOrFail(record.tutor).friendlyFullName\r\n};\r\n\r\nconst matchingsInfo: UnprocessedResourceInfo = {\r\n    fields: [\r\n        ['learner', StringField('text')],\r\n        ['tutor', StringField('text')],\r\n        ['subject', StringField('text')],\r\n        ['mod', NumberField('number')],\r\n        [\r\n            'status',\r\n            SelectField(\r\n                ['unwritten', 'unsent', 'finalized'],\r\n                ['Unwritten', 'Unsent', 'Finalized']\r\n            )\r\n        ]\r\n    ],\r\n    fieldNameMap,\r\n    tableFieldTitles: ['Learner', 'Tutor', 'Mod', 'Subject', 'Status'],\r\n    makeTableRowContent: record => [\r\n        learners.createMarker(record.learner, x => x.friendlyFullName),\r\n        tutors.createMarker(record.tutor, x => x.friendlyFullName),\r\n        record.mod,\r\n        record.subject,\r\n        record.status\r\n    ],\r\n    title: 'matching',\r\n    pluralTitle: 'matchings',\r\n    makeLabel: record =>\r\n        tutors.state.getRecordOrFail(record.tutor).friendlyFullName +\r\n        ' <> ' +\r\n        learners.state.getRecordOrFail(record.learner).friendlyFullName\r\n};\r\n\r\nconst requestSubmissionsInfo: UnprocessedResourceInfo = {\r\n    fields: [\r\n        ...makeBasicStudentConfig(),\r\n        ['mods', NumberArrayField('number')],\r\n        ['subject', StringField('text')]\r\n    ],\r\n    fieldNameMap,\r\n    tableFieldTitles: ['Name', 'Mods', 'Subject'],\r\n    makeTableRowContent: record => [\r\n        record.friendlyFullName,\r\n        record.mods.join(', '),\r\n        record.subject\r\n    ],\r\n    title: 'request submission',\r\n    pluralTitle: 'request submissions',\r\n    makeLabel: record => record.friendlyFullName\r\n};\r\n\r\nexport const tutors = new Resource('tutors', processResourceInfo(tutorsInfo));\r\nexport const learners = new Resource(\r\n    'learners',\r\n    processResourceInfo(learnersInfo)\r\n);\r\nexport const requests = new Resource(\r\n    'requests',\r\n    processResourceInfo(requestsInfo)\r\n);\r\nexport const bookings = new Resource(\r\n    'bookings',\r\n    processResourceInfo(bookingsInfo)\r\n);\r\nexport const matchings = new Resource(\r\n    'matchings',\r\n    processResourceInfo(matchingsInfo)\r\n);\r\nexport const requestSubmissions = new Resource(\r\n    'requestSubmissions',\r\n    processResourceInfo(requestSubmissionsInfo)\r\n);\r\n\r\nexport async function initializeResources(): Promise<void> {\r\n    await tutors.state.initialize();\r\n    await learners.state.initialize();\r\n    await bookings.state.initialize();\r\n    await matchings.state.initialize();\r\n    await requests.state.initialize();\r\n    await requestSubmissions.state.initialize();\r\n}\r\n\r\nwindow['appDebug'] = () => ({\r\n    tutors,\r\n    learners,\r\n    bookings,\r\n    matchings,\r\n    requests,\r\n    requestSubmissions\r\n});\r\n","import { Widget, state, DomWidget } from '../core/shared';\r\n\r\nexport function TilingWindowManagerWidget(): Widget {\r\n    const tiledWindows = state.tiledWindows;\r\n    const dom = $('<div></div>');\r\n    const domWindowKeys = [];\r\n\r\n    tiledWindows.change.listen(() => {\r\n        // STEP A: REMOVE/ADD WINDOWS\r\n        const state = tiledWindows.val;\r\n\r\n        // The windows we want to keep are the ones in the state.\r\n        const windowsToKeep = {};\r\n        for (const { key } of state) windowsToKeep[key] = true;\r\n\r\n        let childIndex = 0;\r\n        while (childIndex < dom.children().length) {\r\n            if (!windowsToKeep[domWindowKeys[childIndex]]) {\r\n                // remove this child: we do NOT increment childIndex\r\n                // because the next child will take the place of the\r\n                // current one\r\n                dom.children()[childIndex].remove();\r\n\r\n                // this resyncs domWindowKeys with the DOM\r\n                domWindowKeys.splice(childIndex, 1);\r\n            } else {\r\n                // take a look at the next child\r\n                ++childIndex;\r\n            }\r\n        }\r\n\r\n        // we assume there might be ONE new window at the end of tiledWindows\r\n        if (state.length > 0) {\r\n            const windowsInDom = {};\r\n            for (const key of domWindowKeys) windowsInDom[key] = true;\r\n\r\n            if (!windowsInDom[state[state.length - 1].key]) {\r\n                // add it in to the end!\r\n                dom.append(state[state.length - 1].window.dom);\r\n\r\n                // this resyncs domWindowKeys with the DOM\r\n                domWindowKeys.push(state[state.length - 1].key);\r\n            }\r\n        }\r\n\r\n        // STEP B: SET VISIBILITIES\r\n        // By now, we assume that domWindowKeys and tiledWindows are in sync\r\n        for (let i = 0; i < state.length; ++i) {\r\n            if (state[i].visible) {\r\n                $(dom.children()[i]).show();\r\n            } else {\r\n                $(dom.children()[i]).hide();\r\n            }\r\n        }\r\n    });\r\n\r\n    return DomWidget(dom);\r\n}\r\n","import {\r\n    Widget,\r\n    state,\r\n    hideWindow,\r\n    showWindow,\r\n    DomWidget,\r\n    container,\r\n    removeWindow\r\n} from '../core/shared';\r\nimport { ButtonWidget } from './ui';\r\n\r\nexport function WindowsBarWidget(): Widget {\r\n    const s = state.tiledWindows;\r\n    const dom = $('<div></div>');\r\n    function makeButton({ key, title, visible }): JQuery {\r\n        const closeButton = ButtonWidget(\r\n            '(X)',\r\n            () => removeWindow(key),\r\n            visible ? 'outline-primary' : 'outline-secondary'\r\n        ).dom;\r\n        const mainButton = ButtonWidget(\r\n            container(\r\n                '<span style=\"white-space: nowrap;overflow: hidden;text-overflow: ellipsis;\"></span>'\r\n            )('Window: ' + title, closeButton),\r\n            () => (visible ? hideWindow(key) : showWindow(key)),\r\n            visible ? 'primary' : 'outline-secondary'\r\n        ).dom;\r\n\r\n        return container('<div class=\"btn-group d-inline-block mr-3\"></div>')(\r\n            mainButton,\r\n            closeButton\r\n        );\r\n    }\r\n    s.change.listen(() => {\r\n        dom.empty();\r\n        dom.append(s.val.map(makeButton));\r\n    });\r\n    return DomWidget(dom);\r\n}\r\n","import {\r\n    container,\r\n    state,\r\n    Widget,\r\n    tutors,\r\n    learners,\r\n    requests,\r\n    requestSubmissions,\r\n    matchings,\r\n    bookings,\r\n    Event,\r\n    RecordCollection,\r\n    stringifyError,\r\n    Record\r\n} from './shared';\r\nimport {\r\n    ButtonWidget,\r\n    showModal,\r\n    ErrorWidget,\r\n    FormSelectWidget,\r\n    createMarkerLink,\r\n    FormToggleWidget,\r\n    FormValueWidget,\r\n    MessageTemplateWidget\r\n} from '../widgets/ui';\r\nimport { TilingWindowManagerWidget } from '../widgets/TilingWindowManager';\r\nimport { WindowsBarWidget } from '../widgets/WindowsBar';\r\nimport { useTiledWindow } from '../widgets/Window';\r\nimport { TableWidget } from '../widgets/Table';\r\nimport { ActionBarWidget } from '../widgets/ActionBar';\r\nimport { AskStatus, getResultOrFail } from './server';\r\n\r\n/*\r\n\r\nBASIC UTILITIES\r\n\r\n*/\r\n\r\nasync function isOperationConfirmedByUser(args: {\r\n    thisOpDoes: string[];\r\n    makeSureThat: string[];\r\n}): Promise<boolean> {\r\n    return new Promise(async res => {\r\n        const body = container('<div></div>')(\r\n            $('<p><strong>This operation will do the following:</strong></p>'),\r\n            container('<ul></ul>')(\r\n                args.thisOpDoes.map(x => container('<li></li>')(x))\r\n            ),\r\n            $('<p><strong>Make sure that:</strong></p>'),\r\n            container('<ul></ul>')(\r\n                args.makeSureThat.map(x => container('<li></li>')(x))\r\n            )\r\n        );\r\n        await showModal('Are you sure?', body, bb => [\r\n            bb('Cancel', 'outline-secondary'),\r\n            bb('Go ahead', 'primary', () => res(true))\r\n        ]);\r\n        res(false);\r\n    });\r\n}\r\n\r\nconst pillsString = `\r\n<ul class=\"nav nav-pills\">\r\n    <li class=\"nav-item\">\r\n        <a class=\"nav-link\">Tutors</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n        <a class=\"nav-link\">Learners</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n        <a class=\"nav-link\">Requests</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n        <a class=\"nav-link\">Request submissions</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n        <a class=\"nav-link\">Bookings</a>\r\n    </li>\r\n    <li class=\"nav-item\">\r\n        <a class=\"nav-link\">Matchings</a>\r\n    </li>\r\n    <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\">Steps</a>\r\n        <div class=\"dropdown-menu\">\r\n            <a class=\"dropdown-item\">Check request submissions</a>\r\n            <a class=\"dropdown-item\">Handle requests and bookings</a>\r\n            <a class=\"dropdown-item\">Finalize matchings</a>\r\n        </div>\r\n    </li>\r\n    <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\">Other</a>\r\n        <div class=\"dropdown-menu\">\r\n            <a class=\"dropdown-item\">About</a>\r\n            <a class=\"dropdown-item\">Force refresh</a>\r\n        </div>\r\n    </li>\r\n</ul>`;\r\n\r\nasync function simpleStepWindow(\r\n    defaultWindowLabel: JQuery | string,\r\n    makeContent: (closeWindow: () => () => void) => JQuery\r\n): Promise<void> {\r\n    if (typeof defaultWindowLabel === 'string')\r\n        defaultWindowLabel = container('<span></span>')(defaultWindowLabel);\r\n\r\n    let errorMessage: string = '';\r\n    let windowLabel: string = 'ERROR in: ' + defaultWindowLabel.text();\r\n    try {\r\n        const { closeWindow } = useTiledWindow(\r\n            container('<div></div>')(\r\n                container('<h1></h1>')(defaultWindowLabel),\r\n                makeContent(() => closeWindow)\r\n            ),\r\n            ActionBarWidget([['Close', () => closeWindow()]]).dom,\r\n            defaultWindowLabel.text()\r\n        );\r\n    } catch (err) {\r\n        errorMessage = stringifyError(err);\r\n        const { closeWindow } = useTiledWindow(\r\n            ErrorWidget(errorMessage).dom,\r\n            ActionBarWidget([['Close', () => closeWindow()]]).dom,\r\n            windowLabel\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\n\r\nSTEPS\r\n\r\n*/\r\n\r\nasync function checkRequestSubmissionsStep() {\r\n    await simpleStepWindow('New request submissions', closeWindow => {\r\n        const recordCollection = requestSubmissions.state.getRecordCollectionOrFail();\r\n        const table = TableWidget(\r\n            ['Name', 'Convert into request'],\r\n            (record: Record) => {\r\n                async function attemptConversion() {\r\n                    // CREATE LEARNER\r\n                    const learnerRecords: Record[] = Object.values(\r\n                        learners.state.getRecordCollectionOrFail()\r\n                    ).filter(\r\n                        x =>\r\n                            x.firstName == record.firstName &&\r\n                            x.lastName == record.lastName\r\n                    );\r\n                    let learnerRecord: Record;\r\n                    if (learnerRecords.length > 1) {\r\n                        // duplicate learner names??\r\n                        // this should be validated in the database\r\n                        throw new Error(\r\n                            'duplicate learner names: ' +\r\n                                String(record.firstName) +\r\n                                '/' +\r\n                                String(record.lastName)\r\n                        );\r\n                    } else if (learnerRecords.length == 0) {\r\n                        // create new learner\r\n                        learnerRecord = getResultOrFail(\r\n                            await learners.state.createRecord({\r\n                                firstName: record.firstName,\r\n                                lastName: record.lastName,\r\n                                friendlyName: record.friendlyName,\r\n                                friendlyFullName: record.friendlyFullName,\r\n                                grade: record.grade,\r\n                                id: -1,\r\n                                date: -1\r\n                            })\r\n                        );\r\n                    } else {\r\n                        // learner already exists\r\n                        learnerRecord = learners[0];\r\n                    }\r\n\r\n                    // CREATE REQUEST\r\n                    getResultOrFail(\r\n                        await requests.state.createRecord({\r\n                            learner: learnerRecord.id,\r\n                            id: -1,\r\n                            date: -1,\r\n                            mods: record.mods,\r\n                            subject: record.subject\r\n                        })\r\n                    );\r\n\r\n                    // DELETE REQUEST SUBMISSION\r\n                    // NOTE: this is only done if the above steps worked\r\n                    // so if there's an error, the request submission won't be obliterated\r\n                    getResultOrFail(\r\n                        await requestSubmissions.state.deleteRecord(record.id)\r\n                    );\r\n                }\r\n                return [\r\n                    requestSubmissions.createMarker(\r\n                        record.id,\r\n                        x => x.friendlyFullName\r\n                    ),\r\n                    ButtonWidget('Convert', async () => {\r\n                        if (\r\n                            await isOperationConfirmedByUser({\r\n                                thisOpDoes: [\r\n                                    `Creates a learner if he/she doesn't already exist in the app`,\r\n                                    `Converts the \"request submission\" into a \"request\" and deletes the original`\r\n                                ],\r\n                                makeSureThat: [\r\n                                    `Request submission information is accurate and correctly spelled`\r\n                                ]\r\n                            })\r\n                        ) {\r\n                            try {\r\n                                closeWindow()();\r\n                                await attemptConversion();\r\n                            } catch (err) {\r\n                                alert(stringifyError(err));\r\n                            }\r\n                        }\r\n                    }).dom\r\n                ];\r\n            }\r\n        );\r\n        // Because request submissions are deleted as soon as they are processed into requests, there is no need to distinguish between \"unfinalized\" and \"finalized\" request submissions.\r\n        // Thus, there is no filter for this step.\r\n        table.setAllValues(recordCollection);\r\n        return table.dom;\r\n    });\r\n}\r\n\r\ntype RequestIndexEntry = {\r\n    id: number;\r\n    bookings: number[];\r\n    matchings: number[];\r\n    currentStatus: string;\r\n};\r\n\r\nasync function handleRequestsAndBookingsStep() {\r\n    await simpleStepWindow('Requests & bookings', closeWindow => {\r\n        const learnerRecords = learners.state.getRecordCollectionOrFail();\r\n        const bookingRecords = bookings.state.getRecordCollectionOrFail();\r\n        const matchingRecords = matchings.state.getRecordCollectionOrFail();\r\n        const requestRecords = requests.state.getRecordCollectionOrFail();\r\n\r\n        const table = TableWidget(\r\n            ['Request', 'Current status', 'Open booker'],\r\n            (i: RequestIndexEntry) => {\r\n                return [\r\n                    requests.createMarker(i.id, x =>\r\n                        learners.createLabel(x.learner, y => y.friendlyFullName)\r\n                    ),\r\n                    i.currentStatus,\r\n                    ButtonWidget('Open', () => {\r\n                        closeWindow()();\r\n                        showRequestBookerStep(i.id);\r\n                    }).dom\r\n                ];\r\n            }\r\n        );\r\n\r\n        // INDEX: learners --> { requests, isMatched }\r\n\r\n        const learnersIndex: { [id: string]: { isMatched: boolean } } = {};\r\n        for (const x of Object.values(learnerRecords)) {\r\n            learnersIndex[x.id] = {\r\n                isMatched: false\r\n            };\r\n        }\r\n        for (const x of Object.values(matchingRecords)) {\r\n            learnersIndex[String(x.learner)].isMatched = true;\r\n        }\r\n\r\n        // INDEX: requests --> { bookings, matchings, shouldBeOnPage }\r\n\r\n        const requestsIndex: {\r\n            [id: string]: RequestIndexEntry;\r\n        } = {};\r\n        for (const x of Object.values(requestRecords)) {\r\n            requestsIndex[String(x.id)] = {\r\n                id: x.id,\r\n                bookings: [],\r\n                matchings: [],\r\n                // \"Current status\" isn't actually a status directly from the database: it's just holds the string that is put on the UI\r\n                currentStatus: 'Unbooked'\r\n            };\r\n        }\r\n\r\n        // ALL INDEXES ARE FULLY BUILT BY THIS POINT\r\n\r\n        // Don't show requests with an already-matched learner.\r\n        for (const x of Object.values(requestRecords)) {\r\n            if (learnersIndex[String(x.learner)].isMatched) {\r\n                requestsIndex[String(x.id)].currentStatus = 'Matched';\r\n            }\r\n        }\r\n\r\n        // If a request has more than one booking, mark it as either status \"Waiting\" or \"Unsent\"\r\n        for (const x of Object.values(bookingRecords)) {\r\n            const y = requestsIndex[String(x.request)];\r\n            if (y.currentStatus == 'Matched') continue;\r\n            if (x.status == 'unsent') {\r\n                y.currentStatus = 'unsent';\r\n            }\r\n            if (y.currentStatus == 'Unsent') continue;\r\n            if (x.status.startsWith('waiting')) {\r\n                y.currentStatus = 'Waiting';\r\n            }\r\n        }\r\n\r\n        table.setAllValues(\r\n            Object.values(requestsIndex).filter(\r\n                x => x.currentStatus !== 'Matched'\r\n            )\r\n        );\r\n\r\n        return table.dom;\r\n    });\r\n}\r\n\r\nasync function showRequestBookerStep(requestId: number) {\r\n    type PotentialTableRowArgs = {\r\n        tutorId: number;\r\n        mods: PotentialTableRowModArgs[];\r\n        numBookings: number;\r\n    };\r\n    type PotentialTableRowModArgs = {\r\n        mod: number;\r\n        isPref: boolean;\r\n        isAlreadyBooked: boolean;\r\n    };\r\n    await simpleStepWindow(\r\n        'Booker for ' +\r\n            learners.createLabel(\r\n                requests.state.getRecordOrFail(requestId).learner,\r\n                x => x.friendlyFullName\r\n            ),\r\n        closeWindow => {\r\n            const matchingRecords = matchings.state.getRecordCollectionOrFail();\r\n            const bookingRecords = bookings.state.getRecordCollectionOrFail();\r\n            const tutorRecords = tutors.state.getRecordCollectionOrFail();\r\n            const table = TableWidget(\r\n                ['Booking', 'Mark as...', 'Todo', 'Finalize'],\r\n                (booking: Record) => {\r\n                    const formSelectWidget = FormSelectWidget(\r\n                        [\r\n                            'unsent',\r\n                            'waitingForLearner',\r\n                            'waitingForTutor',\r\n                            'rejected',\r\n                            'rejectedByLearner',\r\n                            'rejectedByTutor'\r\n                        ],\r\n                        [\r\n                            'Unsent',\r\n                            'Waiting for learner',\r\n                            'Waiting for tutor',\r\n                            'Rejected by learner',\r\n                            'Rejected by tutor',\r\n                            'Rejected for other reason'\r\n                        ]\r\n                    );\r\n                    formSelectWidget.setValue(booking.status);\r\n                    formSelectWidget.onChange(async newVal => {\r\n                        booking.status = newVal;\r\n                        const response = await bookings.state.updateRecord(\r\n                            booking\r\n                        );\r\n                        if (response.status === AskStatus.ERROR) {\r\n                            alert('ERROR!\\n' + response.message);\r\n                        }\r\n                    });\r\n                    return [\r\n                        tutors.createLabel(\r\n                            booking.tutor,\r\n                            x => x.friendlyFullName\r\n                        ) +\r\n                            ' <> ' +\r\n                            learners.createLabel(\r\n                                requests.state.getRecordOrFail(booking.request)\r\n                                    .learner,\r\n                                x => x.friendlyFullName\r\n                            ),\r\n                        formSelectWidget.dom,\r\n                        ButtonWidget('Todo', () =>\r\n                            showBookingMessagerStep(booking.id)\r\n                        ).dom,\r\n                        ButtonWidget('Finalize', () => {\r\n                            finalizeBookingsStep(booking.id, closeWindow());\r\n                        }).dom\r\n                    ];\r\n                }\r\n            );\r\n            // LOGIC: We use a toggle structure where:\r\n            // - There is a row of mod buttons\r\n            // - There is add functionality, but not delete functionality (bookings can be individually deleted)\r\n            // - Toggling the button toggles entries in a temporary array of all added bookings [[tutor, mod]] via. filters\r\n            // - Clicking \"Save your bookings\" will write to the database\r\n            let bookingsInfo: { tutorId: number; mod: number }[] = [];\r\n            const potentialTable = TableWidget(\r\n                ['Tutor', '# times booked', 'Book for mods...'],\r\n                ({ tutorId, mods, numBookings }: PotentialTableRowArgs) => {\r\n                    const buttonsDom = $('<div></div>');\r\n                    for (const { mod, isPref, isAlreadyBooked } of mods) {\r\n                        const modLabel = mod + (isPref ? '*' : '');\r\n                        if (isAlreadyBooked) {\r\n                            buttonsDom.append(\r\n                                ButtonWidget(\r\n                                    modLabel + ' (already booked)',\r\n                                    () => {}\r\n                                ).dom\r\n                            );\r\n                            continue;\r\n                        }\r\n                        const w = FormToggleWidget(\r\n                            modLabel,\r\n                            'Unbook ' + modLabel\r\n                        );\r\n                        w.setValue(false);\r\n                        w.onChange((newVal: boolean) => {\r\n                            if (newVal) {\r\n                                bookingsInfo.push({\r\n                                    tutorId,\r\n                                    mod\r\n                                });\r\n                            } else {\r\n                                bookingsInfo = bookingsInfo.filter(\r\n                                    x => x.tutorId !== tutorId || x.mod !== mod\r\n                                );\r\n                            }\r\n                        });\r\n                        buttonsDom.append(w.dom);\r\n                    }\r\n                    return [\r\n                        tutors.createMarker(tutorId, x => x.friendlyFullName),\r\n                        String(numBookings),\r\n                        buttonsDom\r\n                    ];\r\n                }\r\n            );\r\n            const saveBookingsButton = ButtonWidget(\r\n                'Save your bookings',\r\n                async () => {\r\n                    try {\r\n                        for (const { tutorId, mod } of bookingsInfo) {\r\n                            closeWindow()();\r\n                            const ask = await bookings.state.createRecord({\r\n                                id: -1,\r\n                                date: -1,\r\n                                tutor: tutorId,\r\n                                mod,\r\n                                request: requestId,\r\n                                status: 'unsent'\r\n                            });\r\n                            if (ask.status === AskStatus.ERROR) {\r\n                                throw ask.message;\r\n                            }\r\n                        }\r\n                    } catch (err) {\r\n                        alert(err);\r\n                    }\r\n                }\r\n            );\r\n\r\n            table.setAllValues(\r\n                Object.values(bookings.state.getRecordCollectionOrFail())\r\n                    .filter(x => x.request === requestId)\r\n                    .map(x => bookings.state.getRecordOrFail(x.id))\r\n            );\r\n            // LOGIC: calculating which tutors work for this request\r\n            // - tutor must not be matched at the target mod\r\n            // - tutor may be matched to another mod\r\n            // - for each tutor, keep track of which mods they've been matched to\r\n            // - SENDS TO TABLE: [ tutorId, [ mod, isPref: boolean ] ]\r\n            const requestRecord = requests.state.getRecordOrFail(requestId);\r\n            const tutorIndex: {\r\n                [id: string]: {\r\n                    id: number;\r\n                    matchedMods: number[];\r\n                    bookedMods: number[];\r\n                };\r\n            } = {};\r\n            for (const x of Object.values(tutorRecords)) {\r\n                tutorIndex[String(x.id)] = {\r\n                    id: x.id,\r\n                    matchedMods: [],\r\n                    bookedMods: []\r\n                };\r\n            }\r\n            for (const x of Object.values(matchingRecords)) {\r\n                tutorIndex[String(x.tutor)].matchedMods.push(x.mod);\r\n            }\r\n            for (const x of Object.values(bookingRecords)) {\r\n                tutorIndex[String(x.tutor)].bookedMods.push(x.mod);\r\n            }\r\n\r\n            const tableValues: PotentialTableRowArgs[] = [];\r\n            for (const tutor of Object.values(tutorIndex)) {\r\n                const modResults: PotentialTableRowModArgs[] = [];\r\n                for (const mod of requestRecord.mods) {\r\n                    if (!tutor.matchedMods.includes(mod)) {\r\n                        const tutorRecord = tutors.state.getRecordOrFail(\r\n                            tutor.id\r\n                        );\r\n                        if (tutorRecord.mods.includes(mod)) {\r\n                            modResults.push({\r\n                                mod,\r\n                                isPref: tutorRecord.modsPref.includes(mod),\r\n                                isAlreadyBooked: tutor.bookedMods.includes(mod)\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                if (modResults.length > 0) {\r\n                    tableValues.push({\r\n                        tutorId: tutor.id,\r\n                        mods: modResults,\r\n                        numBookings: tutor.bookedMods.length\r\n                    });\r\n                }\r\n            }\r\n            potentialTable.setAllValues(tableValues);\r\n            return container('<div></div>')(\r\n                table.dom,\r\n                potentialTable.dom,\r\n                saveBookingsButton.dom\r\n            );\r\n        }\r\n    );\r\n}\r\nasync function showBookingMessagerStep(bookingId: number) {\r\n    const b = bookings.state.getRecordOrFail(bookingId);\r\n    const r = requests.state.getRecordOrFail(b.request);\r\n\r\n    await simpleStepWindow(\r\n        container('<span></span>')(\r\n            'Messager for ',\r\n            learners.createMarker(r.learner, x => x.friendlyFullName),\r\n            ' <> ',\r\n            tutors.createMarker(b.tutor, x => x.friendlyFullName)\r\n        ),\r\n        closeWindow => {\r\n            const dom = $('<div></div>');\r\n\r\n            if (b.status === 'unsent') {\r\n                dom.append(\r\n                    $(\r\n                        '<p>Because status is \"unsent\", send the message to the tutor:</p>'\r\n                    )\r\n                );\r\n                dom.append(\r\n                    MessageTemplateWidget(\r\n                        `Hi! Can you tutor a student in ${r.subject} on mod ${b.mod}?`\r\n                    ).dom\r\n                );\r\n                dom.append(\r\n                    $(\r\n                        '<p>Once you send the message, go back and set the status to \"waiting for learner\".</p>'\r\n                    )\r\n                );\r\n            }\r\n            if (b.status === 'waitingForLearner') {\r\n                dom.append(\r\n                    $(\r\n                        '<p>You are waiting for the learner. Once the tutor replies, send a message to the learner:</p>'\r\n                    )\r\n                );\r\n                dom.append(\r\n                    MessageTemplateWidget(\r\n                        `Hi! We have a tutor for you on mod ${b.mod}. Can you come?`\r\n                    ).dom\r\n                );\r\n                dom.append(\r\n                    $(\r\n                        '<p>Once you send the message, go back and set the status to \"waiting for tutor\".</p>'\r\n                    )\r\n                );\r\n            }\r\n            if (b.status === 'waitingForTutor') {\r\n                dom.append(\r\n                    $(\r\n                        '<p>You are waiting for the learner. Once the learner replies, if everything is good, go back and click \"finalize\".</p>'\r\n                    )\r\n                );\r\n            }\r\n\r\n            return dom;\r\n        }\r\n    );\r\n}\r\n\r\nasync function finalizeBookingsStep(\r\n    bookingId: number,\r\n    onVerify: () => void\r\n): Promise<boolean> {\r\n    if (\r\n        await isOperationConfirmedByUser({\r\n            thisOpDoes: [\r\n                'Assigns the tutor to the learner, replacing the booking with a matching (this can be undone by deleting the matching and rebooking the )',\r\n                'Deletes all other bookings associated with the learner'\r\n            ],\r\n            makeSureThat: ['The tutor and learner really should be matched']\r\n        })\r\n    ) {\r\n        onVerify();\r\n        try {\r\n            const b = bookings.state.getRecordOrFail(bookingId);\r\n            const r = requests.state.getRecordOrFail(b.request);\r\n            // ADD MATCHING\r\n            const ask = await matchings.state.createRecord({\r\n                learner: r.learner,\r\n                tutor: b.tutor,\r\n                subject: r.subject,\r\n                mod: b.mod,\r\n                status: 'unwritten',\r\n                id: -1,\r\n                date: -1\r\n            });\r\n            if (ask.status === AskStatus.ERROR) {\r\n                throw ask.message;\r\n            }\r\n            // DELETE ALL BOOKINGS FOR REQUEST\r\n            for (const booking of Object.values(\r\n                bookings.state.getRecordCollectionOrFail()\r\n            )) {\r\n                if (booking.request === r.id) {\r\n                    const ask2 = await bookings.state.deleteRecord(booking.id);\r\n                    if (ask2.status === AskStatus.ERROR) {\r\n                        throw ask2.message;\r\n                    }\r\n                }\r\n            }\r\n        } catch (err) {\r\n            alert(stringifyError(err));\r\n        }\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nasync function finalizeMatchingsStep() {\r\n    await simpleStepWindow('Finalize matchings', closeWindow => {\r\n        const table = TableWidget(\r\n            ['Matching', 'Status', 'Write', 'Finalize'],\r\n            (record: Record) => {\r\n                const formSelectWidget = FormSelectWidget(\r\n                    ['unwritten', 'unsent', 'unfinalized'],\r\n                    ['Unwritten', 'Unsent', 'Unfinalized']\r\n                );\r\n                formSelectWidget.setValue(record.status);\r\n                formSelectWidget.onChange(async newVal => {\r\n                    record.status = newVal;\r\n                    const response = await matchings.state.updateRecord(record);\r\n                    if (response.status === AskStatus.ERROR) {\r\n                        alert('ERROR!\\n' + response.message);\r\n                    }\r\n                });\r\n                return [\r\n                    learners.createLabel(\r\n                        record.learner,\r\n                        x => x.friendlyFullName\r\n                    ) +\r\n                        '<>' +\r\n                        tutors.createLabel(\r\n                            record.tutor,\r\n                            x => x.friendlyFullName\r\n                        ),\r\n                    formSelectWidget.dom,\r\n                    ButtonWidget('Send', () => {\r\n                        showMatchingSender(record.id);\r\n                    }).dom,\r\n                    ButtonWidget('Finalize', () => {\r\n                        finalizeMatching(record.id, closeWindow());\r\n                    }).dom\r\n                ];\r\n            }\r\n        );\r\n        const records = Object.values(\r\n            matchings.state.getRecordCollectionOrFail()\r\n        );\r\n        table.setAllValues(records.filter(x => x.status !== 'finalized'));\r\n\r\n        return table.dom;\r\n    });\r\n}\r\n\r\nasync function showMatchingSender(matchingId: number) {\r\n    const m = matchings.state.getRecordOrFail(matchingId);\r\n    await simpleStepWindow(\r\n        container('<span></span>')(\r\n            'Send matching: ',\r\n            learners.createMarker(m.learner, x => x.friendlyFullName),\r\n            ' <> ',\r\n            tutors.createMarker(m.tutor, x => x.friendlyFullName)\r\n        ),\r\n        closeWindow => {\r\n            const t = tutors.state.getRecordOrFail(m.tutor);\r\n            const l = learners.state.getRecordOrFail(m.learner);\r\n            return container('<div></div>')(\r\n                'Send this to the learner.',\r\n                MessageTemplateWidget(\r\n                    `You will be tutored by ${t.friendlyFullName} during mod ${m.mod}.`\r\n                ),\r\n                'Then, send this to the tutor.',\r\n                MessageTemplateWidget(\r\n                    `You will be tutoring ${l.friendlyFullName} during mod ${m.mod}.`\r\n                ).dom\r\n            );\r\n        }\r\n    );\r\n}\r\n\r\nasync function finalizeMatching(matchingId: number, onVerify: () => void) {\r\n    if (\r\n        await isOperationConfirmedByUser({\r\n            thisOpDoes: [\r\n                'Marks the matching as finalized, which posts it on the schedule page and attendance tracker'\r\n            ],\r\n            makeSureThat: ['Everyone is notified of the matching']\r\n        })\r\n    ) {\r\n        onVerify();\r\n        // MARK MATCHING AS FINALIZED\r\n        const r = matchings.state.getRecordOrFail(matchingId);\r\n        r.status = 'finalized';\r\n        matchings.state.updateRecord(r);\r\n    }\r\n}\r\n/*\r\n\r\nROOT WIDGET\r\n\r\n*/\r\n\r\nexport function rootWidget(): Widget {\r\n    function PillsWidget(): Widget {\r\n        const dom = $(pillsString);\r\n        dom.find('a')\r\n            .css('cursor', 'pointer')\r\n            .click(ev => {\r\n                const text = $(ev.target).text();\r\n                if (text == 'Tutors') tutors.makeTiledViewAllWindow();\r\n                if (text == 'Learners') learners.makeTiledViewAllWindow();\r\n                if (text == 'Bookings') bookings.makeTiledViewAllWindow();\r\n                if (text == 'Matchings') matchings.makeTiledViewAllWindow();\r\n                if (text == 'Request submissions')\r\n                    requestSubmissions.makeTiledViewAllWindow();\r\n                if (text == 'Requests') requests.makeTiledViewAllWindow();\r\n                ev.preventDefault();\r\n                if (text == 'About')\r\n                    showModal('About', 'Made by Suhao Jeffrey Huang', bb => [\r\n                        bb('OK', 'primary')\r\n                    ]);\r\n                if (text == 'Force refresh') {\r\n                    tutors.state.forceRefresh();\r\n                    learners.state.forceRefresh();\r\n                    bookings.state.forceRefresh();\r\n                    matchings.state.forceRefresh();\r\n                    requests.state.forceRefresh();\r\n                    requestSubmissions.state.forceRefresh();\r\n                    for (const window of state.tiledWindows.val) {\r\n                        window.onLoad.trigger();\r\n                    }\r\n                }\r\n                if (text == 'Check request submissions') {\r\n                    checkRequestSubmissionsStep();\r\n                }\r\n                if (text == 'Handle requests and bookings') {\r\n                    handleRequestsAndBookingsStep();\r\n                }\r\n                if (text == 'Finalize matchings') {\r\n                    finalizeMatchingsStep();\r\n                }\r\n            });\r\n\r\n        return { dom };\r\n    }\r\n\r\n    const dom = container('<div id=\"app\" class=\"layout-v\"></div>')(\r\n        container('<nav class=\"navbar layout-item-fit\">')(PillsWidget().dom),\r\n        container('<nav class=\"navbar layout-item-fit layout-v\"></div>')(\r\n            WindowsBarWidget().dom\r\n        ),\r\n        container('<div class=\"layout-item-scroll\"></div>')(\r\n            TilingWindowManagerWidget().dom\r\n        )\r\n    );\r\n    return { dom };\r\n}\r\n","import { initializeResources } from './core/shared';\r\nimport { rootWidget } from './core/widget';\r\n\r\nconsole.log('hi there!');\r\nwindow['appOnReady'] = async () => {\r\n    // TODO: replace with proper loading widget\r\n    $('body').append($('<h1 id=\"app\">Loading...</h1>'));\r\n    await initializeResources();\r\n    $('body').empty();\r\n    $('body').append(rootWidget().dom);\r\n};\r\n\r\n$(document).ready(window['appOnReady']);\r\n"]}